/**
 * 
 * @author Emma Grammer
 * Email: ekg2611@email.vccs.edu
 * Date 12/2/2015 
 *
 */
public class Day {
	private String day;
	private String [] days = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};
	
	public Day(String day) {
		super();
		this.day = day;
	}
	
	public void Day() {
		this.day = "Monday";
	}

	public String getDay() {
		return day;
	}

	public void setDay(String day) {
		this.day = day;
	}
/**
 * 	Calculating the day to be able to find the next and the previous day
 * @param numOfDays the parameter is the number of days
 * @return returns message
 */
	
	public String calculateDay(int numOfDays){
		String message = "";
		int dayIndex = getDayIndex(this.day);
		if (dayIndex!= -1){
			int newIndex = getNewIndex(dayIndex, numOfDays);
			message = days[newIndex];
		}else{
			message = "Invalid Day!";
		}
		return message;
	}
/**
 * 	getting the index of the day
 * @param dayIndex parameter the day index
 * @param numOfDays parameter number of days
 * @return returns newIndex
 */
	
	
	private int getNewIndex(int dayIndex, int numOfDays){
		int newIndex = dayIndex;
		if(numOfDays > 0){
			for(int i=1; i<=numOfDays; i++){
				newIndex += 1;
				if (newIndex == 7)
					newIndex = 0;
			}
		}
		
		if(numOfDays < 0){
			for(int i=1; i<=(numOfDays * -1); i++){
				newIndex -= 1;
				if(newIndex == -1)
					newIndex =6;
			}
		}
		return newIndex;
	}
/**
 * calculating the previous day of the week	
 * @return returns calculateDay
 */
	
	public String previousDay(){
		return calculateDay(-1);
	}
/**
 * calculating the next day of the week	
 * @return returns calculateDay
 */

	public String nextDay(){
		return calculateDay(1);
	}
/**
 * getting the index of the day	
 * @param day parameter day
 * @return returns i or -1
 */
	
	private int getDayIndex(String day){
		for(int i=0; i<days.length; i++)
			if (days[i] == this.day){
				return i;
			}
		return -1;
	}

/**
 * the toString
 */
	@Override
	public String toString() {
		return "Day[day = "+ day + "]";
	}
}
